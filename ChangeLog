2007-05-07 06:59  lorenzen

	* : Inserted forgotten word in variable description.

2007-05-04 16:18  lorenzen

	* : Documented the DerivativesOrder variable.

2007-05-04 11:03  xavier

	* : * Made fftw mandatory for 2.1, because the code doesn't compile
	  without it and it is required for a decent perfomance.

2007-03-23 18:35  xavier

	* : * Changed the files to build a Debian package in 2.1.x, now the
	  the
	  octopus deb can be built on a clean debian etch (or ubuntu)
	  system
	  using gfortran.
	  
	  * I had to disable the parallel binary, because the mpich
	  available in
	  Debian is still compiled with g77 and there are some problems
	  compiling octopus with openmpi.
	  
	  * I moved the old debian/rules file to
	  debian/rules.other_compilers .

2007-03-23 18:17  xavier

	* : More 2.1.x fixes:
	  
	  * Modified the README file to point user to the wiki.
	  * A variable was defined twice when compiling with fftw2.

2007-03-23 15:48  xavier

	* : * Backport of the NP/NP_PART fix to 2.1.x

2007-03-22 18:26  lorenzen

	* : Revision of the RPM packaging infrastructure. The RPM spec file
	  now takes
	  care of building both serial and MPI executables.
	  
	  The rpm target of the main Makefile.am has been polished a bit to
	  respect local build
	  settings, so being root is not necessarily required any more.
	  
	  As soon as the 2.1 release will be done, I can take care of the
	  RPMs for 32 Bit and also 64 Bit.

2007-03-12 12:35  xavier

	* : * Bugfix: The declaration of an argument was missing, as
	  pointed out
	  in ticket 77. This was fixed in trunk.
	  
	  The other bug is already fixed in trunk and in the 2.1.x branch.
	  
	  This fixes #77.

2007-02-25 21:27  acastro

	* : Backport of the bug corrected in trunk. However, even if arpack
	  does
	  not crash, it does not produce very good numbers in 2.1.x (in
	  trunk,
	  however, it seems to work much better...)

2007-02-07 15:12  lorenzen

	* : This is a backport of revisions r2647 and r2659 to
	  branches/2.1.x.
	  Those changes renamed the following macros of global.h:
	  
	  DOUBLE -> REAL_DOUBLE
	  SINGLE -> REAL_SINGLE
	  PRECISION -> REAL_PRECISION
	  
	  Again, the rationale was that -- unfortunately -- DOUBLE
	  PRECISION is still
	  a Fortran 90 reserved word and it is a bad idea to shadow any of
	  those by
	  a macro. This caused a compilation error with the mpif.h header
	  file. With
	  this commit I also revert the last change of Xavier in the 2.1.x
	  branch, which
	  circumvented the problem by undefining the macros but became
	  superfluous by
	  this more systematic renaming.

2007-02-06 19:06  xavier

	* : * Compilation fix: DOUBLE and PRECISION have to be undefined
	  when
	  including mpif.h.

2007-01-19 13:21  xavier

	* : Some fixes before 2.1.0rc2 release:
	  
	  * Fixed address of the pseudopotential generator in doc of the
	  species
	  block.
	  * The file variables.local wasn't being added to the tarball.
	  * Two tests used old variable names for pseudopotential species.

2006-12-13 06:48  acastro

	* : Backport of trunk bugfix 2623, to 2.1.x.

2006-12-09 12:18  acastro

	* : 2.1.x now also compiles if FFTW was not found at configure
	  time.

2006-11-03 15:25  xavier

	* : * Backport of the LCAO fixes.

2006-10-27 18:23  acastro

	* : Backport of some bugs found in branch but also present in 2.1.x

2006-10-06 09:52  xavier

	* : Backport of alberto's bugfixes (changesets 2454 and 2403).

2006-10-06 09:15  athimm

	* : Missing netcdf detection fragement.

2006-10-06 09:08  athimm

	* : Remove the gui from 2.1.x.
	  
	  There are changes required that should change the variables'
	  interface
	  in octopus. Furthermore 2.1.x is release-ready other than the
	  gui.

2006-10-06 09:06  athimm

	* : Backports the netcdf detection fixes from trunk, fixes #39.

2006-10-02 20:33  xavier

	* : This error check can be made simpler.

2006-10-02 16:37  xavier

	* : This is the bug that appeared during the Benasque school. An
	  error
	  condition was not checked.

2006-10-02 16:02  xavier

	* : A newline at the end of this file was missing and this caused
	  problems
	  with autoconf.

2006-09-13 13:58  acastro

	* : [Porting one bug already fixed in trunk]
	  
	  Bug fixed.
	  
	  The Portland compiler did not like very long lines even if they
	  are
	  just comments, and did not like to mix, in an interface block,
	  the
	  function or subroutine interface definitions, with the module
	  procedure statements. I have looked up the standard, and I
	  believe
	  both things are legal, but in any case this way that compiler is
	  happy
	  and it does not harm the others compilers.

2006-08-24 20:25  appel

	* : A few more places where check_inp was still missing.

2006-08-24 15:07  acastro

	* : Bug fixed.
	  
	  The problem with the 11-sic.test (never converging) was the use
	  of
	  density mixing, instead of potential mixing. The potential mixing
	  is
	  necessary when using orbital dependent xc functionals.

2006-08-24 14:17  athimm

	* : Default to not use python.
	  
	  It is currently of little value and only adds to the release
	  process
	  (like forcing the release manager to perform gettext/varinfo.xml
	  steps).

2006-08-24 14:14  athimm

	* : Make branch point to the next release (candiate).

2006-08-23 20:39  appel

	* : Creating branch for 2.1.x development series.

2006-08-23 20:36  appel

	* : Preparing the first release candidate of octopus 2.1.0. Setting
	  version strings to 2.1.0rc1.

2006-08-23 09:39  appel

	* : Make the various output options public, so that they can be
	  used in other parts of the code for calls to X(output_function).

2006-08-23 09:34  appel

	* : This push_sub had the wrong routine name.

2006-08-23 09:18  appel

	* : When using UserDefinedStates as initial states for a time
	  propagation, octopus was always trying to read ground state
	  files from the tmp directory, even when all initial orbitals
	  were given as formula strings (I didn't think of this case,
	  when I was initially adding the UserDefinedStates feature).
	  Adding therefore a logical variable OnlyUserDefinedInitialStates
	  (with default "no"). If true, then one can use arbitrary
	  initial states for a time propagation (via UserDefinedStates)
	  and octopus is not attempting to read ground state orbitals.
	  
	  This is e.g. useful to propagate coherent states, or gaussian
	  wave packets. Might also be useful for excerices on time
	  propagations in the summer school.

2006-08-23 08:58  appel

	* : Avoid division by zero, when scalar meshes with "zero"
	  points are created.

2006-08-23 08:56  appel

	* : A !%Variable header was missing for one of the variables.

2006-08-23 08:55  appel

	* : A check_inp and a pop_sub were missing.

2006-08-22 10:16  xavier

	* : Added a new variable, LinearSolverMaxTol, that is the maximum
	  tolerance that will be applied to the Linear Solver.

2006-08-18 12:28  xavier

	* : I forgot to change the filename in this test.

2006-08-17 13:36  xavier

	* : * Reverted from allocatables to pointers, because the code was
	  not F90
	  standard.

2006-08-17 12:20  xavier

	* : * Iterations are counted once, even if the apply the
	  hamiltonian twice
	  per iteration.

2006-08-17 12:17  xavier

	* : * Added GPL header.

2006-08-17 11:52  xavier

	* : * Renamed the output file of dynamic polarizability to
	  'linear/alpha'.

2006-08-17 11:38  xavier

	* : * In the nl_operator class, the arrays were defined as
	  pointers, i
	  changed the definition to allocatables, this gives the compiler
	  more
	  room for optimization.
	  * I had to change some code that relied on pointers to this
	  arrays.
	  Instead i used a pointer to the operators.
	  
	  It would be nice if someone can review this changes, specially
	  for
	  mpi, i don't know if this code is checked by the testsuite.

2006-08-17 10:17  appel

	* : When adding multi-dataset lables to the input files yesterday I
	  forgot to change the directories in the *.test files that are
	  used for the matches. This fixes the failed periodic tests of
	  today.

2006-08-17 09:50  acastro

	* : Two *_inc.F90 files were missing from the noinst_HEADERS,
	  so that the package constructed by make dist was incomplete.

2006-08-16 23:53  acastro

	* : The regeneration of the info file, when typing "make dist" was
	  broken,
	  due to some repetition of node names which apparently is not
	  allowed.
	  Maybe we are going to get rid of this file anyways, but anyways
	  I fix this.
	  
	  The "make dist" still does not work, it breaks now in the python
	  directory, complaining about config.rpath missing.

2006-08-16 12:57  appel

	* : Add routines which take care of resizing the simulation
	  box for scattering calculations (by multiples of the asymptotic
	  unit cell). The resizing is done such that the spacing
	  of the "central region" matches in the end the spacing
	  that is used for a periodic calculation of the asymptotic
	  region.

2006-08-16 09:57  appel

	* : Only index 0 is available for spin unpolarized
	  calculations. This will fix the failed periodic
	  tests of today (that will arrive later).

2006-08-15 21:05  appel

	* : For spin-polarized calculations also output spin resolved bands
	  and DOS.

2006-08-15 21:05  appel

	* : Add unscaled k-vectors to the output of the Wigner-Seitz cell.

2006-08-15 21:04  appel

	* : Add labels for multi dataset mode.

2006-08-15 21:04  appel

	* : Uncomment this for the moment, since Input/OutputDir is not
	  (yet)
	  used and we would create non-necessary directories in multi-
	  dataset mode otherwise.

2006-08-13 21:47  appel

	* : Also include unscaled k-vectors in the output of the
	  fermi energy.

2006-08-13 21:16  appel

	* : The scaling of kpoints in crystal_init was causing all my
	  confusion about factors of two. Now I made my Wigner-Seitz
	  routine compatible to crystal_init.

2006-08-13 18:17  appel

	* : For speed reasons Intel 9.1 is now also the default
	  compiler for the i386 deb.

2006-08-13 10:10  appel

	* : When using a large number of states the record length was
	  exceeded during output. Revert again to direct io.

2006-08-13 10:08  appel

	* : Reciprocal cell sizes were still not correct.

2006-08-12 20:24  appel

	* : o Allow to use FullWignerSeitzCell also for 1D periodic
	  systems.
	  
	  o Correct some factors of two.

2006-08-12 20:24  appel

	* : o Add routine to compute the degeneracy matrix for scattering
	  states.
	  
	  o Add option to choose between scaled and unscaled k-vectors
	  for the output of bands.
	  
	  o Fix a couple of cases which were not MPI clean.

2006-08-12 20:06  appel

	* : Add routine to write mesh info to disk (similar to
	  simul_box_dump).

2006-08-12 20:05  appel

	* : Also write total Kohn-Sham potential.

2006-08-12 17:39  acastro

	* : Bug fixed.
	  
	  The call to write_momentum should be done by all nodes,
	  or else it stops when running in parallels.
	  
	  I removed the last digit of the test; I think that it is asking
	  for too much precision, and that last digit is not obtained
	  when running with different compilers or with different number
	  of processors.

2006-08-12 16:20  acastro

	* : I disconnect the last match of this test, since the code
	  produces different numbers depending on the compiler flags.
	  Obvioiusly something weird is inside the algorithm.

2006-08-12 08:17  xavier

	* : * Renamed the "pol" calculation mode to "pol_fd" and the output
	  file
	  to "linear/polarizability_fd".

2006-08-12 02:10  acastro

	* : Bug fixed.
	  
	  The atomic wave functions of some atoms (like Ag with semicore)
	  could
	  not be calculated by the Schrodinger solver in the hgh module.
	  This
	  little change, for some reason, seems to solve this issue.

2006-08-12 01:24  acastro

	* : Bug fixed.
	  The Ag_sc pseudopotential file had an extra line.

2006-08-10 18:45  appel

	* : Adding routine to calculate total and band resolved density of
	  states. When running with periodic boundary conditions octopus
	  now also writes the density of states (including band resolved
	  DOS) and the fermi energy to 'static'.

2006-08-10 18:44  appel

	* : Adding to X(Hpsi) the possibility to compute (H-E)|psi>.
	  This will be needed for scattering states.

2006-08-10 18:44  appel

	* : Forgot to update header.

2006-08-09 19:38  acastro

	* : After some update of the code (I could not find which one), the
	  last
	  number of this test stopped matching the previous value. However,
	  I
	  find it more likely that the number is correct now, rather than
	  before. So I changed the value of the test.
	  
	  Optimal control should still be tagged as an "experimental
	  feature,
	  anyway.

2006-08-09 17:47  acastro

	* : I deactivate one of the tests that is failing, since it will
	  take some time to figure out why, and it is not relevant at
	  this point.

2006-08-09 12:38  xavier

	* : * Added a very basic printing of frequency dependent
	  hyperpolarizability.

2006-08-09 09:34  appel

	* : Bug fixed.
	  
	  When running parallel in domains octopus was crashing for
	  periodic boundary conditions. This happened because the
	  mesh_index
	  function was assigning an index 0 to several entries of opi%i
	  in nl_operator.F90. Not only the "removed point" was missing
	  in the interior mesh (as it should), but also the mirror point of
	  the "removed point". All of that occured because simul_box_in_box
	  was returning the wrong answer for the "mirror points" in the
	  case
	  of periodic boundary conditions.

2006-08-09 09:10  appel

	* : Similar to the time measurements of td steps, octopus now
	  also prints the elapsed (wall) time of a SCF step. The same
	  format as in the td case is used.
	  This turned out to be useful for estimating how much time
	  octopus spends in Hpsi operations during the scf cycle for
	  a chosen grid size.

2006-08-08 19:53  acastro

	* : Bugs fixed.
	  
	  Related to the failure of the 04-box_oct_long.test
	  (optimal-control).
	  It gave run-time errors and crashed. However, now the tests keeps
	  failing due to discrepancies in the numbers.
	  
	  I do not know now which numbers are correct, so I leave it as it
	  is for the moment.

2006-08-08 16:11  acastro

	* : Bug fixed.
	  
	  The Casida test was failing, when the run-time checks are
	  enabled, due
	  to this very stupid bug. The bug was harmless, when the checks
	  were
	  not done.

2006-08-08 10:58  appel

	* : Add possibility to choose the full Wigner-Seitz cell of the
	  reciprocal lattice for the sampling of the k-points. If the
	  variable FullWignerSeitzCell is set to true no symmetry is
	  taken into account for the choice of k-points (i.e. no
	  Monkhorst-Pack scheme will be used). Instead the k-point
	  sampling will range over the full Wigner-Seitz cell. Currently
	  cubes, octahedrons and dodecahedrons are implemented. The
	  shape of the Wigner-Seitz cell has to be selected manually by
	  setting the variable WignerSeitzCellType. A more sophisticated
	  automatic detection could be added later.

2006-08-06 15:58  appel

	* : Similar to angular momentum, octopus now also computes
	  the expectation values of the momentum operator for the
	  KS states at the end of a ground-state calculation.

2006-08-06 14:30  appel

	* : Octopus can now output also wavefunctions with index > 999,
	  or 1024 respectively.
	  The old bit-shift code in liboct/oct_f.c was clearly more
	  compact than this but it was bound to work only for state
	  indices < 32*32 (increasing val in (1 << val) beyond 31
	  would cause a left shift count which is larger than the width
	  of the type).

2006-08-06 12:01  appel

	* : Bug fixed. The output of files in multi-dataset mode
	  was not always ending up in the right directories.

2006-08-04 17:08  xavier

	* : * Bugfix: Some indexes were wrong, so trying to calculate the
	  lr_elf resulted
	  in segmentation fault.
	  * Added push_sub/pop_sub to lr_calc_current.

2006-08-03 20:25  appel

	* : o Measure total runtime of the testsuite. This could be used
	  to compare how fast octopus is running on a given hardware
	  platform or for a given compiler.
	  
	  o Add option to the script to run testsuite without MPI runs.
	  
	  o Add datestamp to the mail subject of the mail-report.

2006-08-03 12:06  xavier

	* : * Initial version of dynamic hyperpolarizabilities. Now comes
	  testing.

2006-08-03 09:33  xavier

	* : I had disabled this test by mistake.

2006-08-03 08:56  xavier

	* : Updated the matches of long tests to take into account the use
	  of the
	  RR projection.

2006-08-02 20:47  xavier

	* : Nothing important, only a bit of i18n ;-)

2006-08-02 15:28  appel

	* : No output log was appended to the mail reports of the
	  daily testsuite. Let's see if this helps.

2006-08-02 15:26  appel

	* : The suffix was in the case of the MPI executables not really
	  a suffix, rather a "inbetweenfix". Change octopus-suffix_mpi
	  to octopus_mpi-suffix.

2006-08-02 15:16  appel

	* : o Adding Newton-Raphson method for matrices. Starting from a
	  sufficiently good initial guess, this routine can be used
	  to polish inverse matrices. In the case of Vandermonde matrices
	  e.g. the Parker-Traub algorithm can be used to compute an
	  initial guess.
	  Due to the required matrix-matrix multiplication Newton-Raphson
	  is however O(N^3).
	  
	  o Adding routine to estimate the quality of a inverse matrix.

2006-08-02 14:51  appel

	* : Adding an implementation of the Parker-Traub algorithm for the
	  inversion of Vandermonde matrices.
	  The algorithm inverts a Vandermonde matrix in O(N^2) operations
	  compared to O(N^3) for methods that don't take structure into
	  account.
	  
	  Refs.:
	  F. Parker, Inverses of Vandermonde matrices, Amer. Math.
	  Monthly, 71, 1964, p410-411
	  J. Traub, Associated polynomials and uniform methods for
	  the solution of linear problems
	  SIAM Review, 8, No. 3, 1966, p277-301
	  
	  This will be needed for the method that I developed to compute
	  scattering states.

2006-08-01 10:10  appel

	* : Bug fixed. The linear/excitations directory was not created
	  in multi dataset mode because loct_mkdir was used instead of
	  io_mkdir. However, loct_mkdir is not aware of multi datatsets.
	  The 10-casida.test was failing because of this.

2006-08-01 08:54  xavier

	* : Added two new methods: wfs_are_complex and wfs_are_real.
	  
	  Both functions receive an states_t object and return true when
	  wavefunctions are of the type specified in the name and false
	  otherwise.

2006-08-01 08:50  appel

	* : Forgot ${exec_suffix} inside mail_report().
	  
	  ... we are getting close to revitalizing the nightly builds and
	  regression tests.

2006-08-01 08:32  appel

	* : Also the variable "last" was used without beeing intialized
	  first.

2006-08-01 08:30  appel

	* : o Don't use compile flags as linking flags.
	  
	  o Remove duplicated preprocessing code. Don't delete prerequisite
	  instead.

2006-07-31 19:03  xavier

	* : I forgot to put some of the lines required to create
	  atomic_oct.f90.

2006-07-31 18:07  xavier

	* : * The FCDEBUGFLAGS was not used when linking.
	  
	  * The atomic.o file was rebuilt every time, changing the rule
	  from
	  "atomic.o: atomic_oct.f90" to "atomic.o: atomic.F90" solves the
	  problem.
	  
	  * Using FCDEBUGFLAGS is possible to compile octopus using
	  interfile
	  optimizations, for example -ipa with pathf90 or -ipo with ifort.
	  This
	  is because with this flags, the compiler doesn't produce binary
	  objects until the linking step, so the configure script doesn't
	  work
	  properly.

2006-07-31 17:57  xavier

	* : * More explicits bounds in vectorial operations.
	  
	  * The quadratic box test has undeterminisc behaviour. Leaving the
	  default mixing instead of Mixing=0.5 "solves" the problem, but I
	  am
	  not 100% sure that this is the right thing to do.

2006-07-31 16:14  xavier

	* : * Using the Rayleigh-Ritz subspace diagonalization, the
	  unstability of
	  the self consistency iteration disappears, so I am enabling it by
	  default. There is still the problem of non-determinisc behaviour,
	  but
	  now it takes 31 or 32 iterations for benzene and not 32, 33 or
	  127. I
	  still have to check what happens with other compilers.
	  
	  * The results of some test changed slightly with this. So i
	  updated
	  them.
	  
	  * I put back the NP_PART size in CG eigensolvers, but i couldn't
	  find
	  why it should be like that.

2006-07-31 12:20  xavier

	* : A bit of cleaning in the CG Eigensolver:
	  
	  * All arrays were defined with NP_PART size, altough it's not
	  needed.
	  I only kept NP_PART size in arrays were the hamiltonian is
	  applied.
	  * Put explicit limits in vectorial operations.

2006-07-31 10:19  appel

	* : Besides FCFLAGS there is now a variable FCDEBUGFLAGS. I had to
	  separate debug flags from regular flags since some files cannot
	  be compiled with debug flags. The prime example is atomic.F90.
	  If this file is compiled with a full set of debug flags all sorts
	  of runtime errors occur, causing a lot of tests to fail. I guess
	  nobody really bothers to fix the issues in the F77 spaghetti
	  code.
	  Therefore we exclude this file from runtime checking so that we
	  can enable the cheks in the nightly builds *for the rest of the
	  files*.
	  
	  To achive a conditional compilation with different FC flags I
	  had to introduce in src/Makefile.am pattern based rules instead
	  of suffix rules for the compilation

2006-07-31 09:57  xavier

	* : Put some explicit limits in vectorial operations. This is an
	  (failed) attempt
	  to solve bug 37.

2006-07-30 20:55  appel

	* : The variable first was being used without being defined.

2006-07-30 18:57  appel

	* : else clauses where missing for the case when no exec suffix
	  is given.

2006-07-30 17:00  appel

	* : Seems to be smarter to sort this out by symlinks.

2006-07-30 16:38  appel

	* : Also need to take care of manual installs.

2006-07-30 15:55  appel

	* : o Add also program suffix for executables build with NAG.
	  o Add missing LDFLAGS for MPI flavours.

2006-07-30 15:02  appel

	* : Add support for program suffixes like -debug. This allows to
	  run the testsuite for different flavours of executables (e.g.
	  with or without bound checking, etc).

2006-07-30 14:58  appel

	* : o On amd64 linking to the gdlib causes octopus to segfault
	  always when
	  statically linked executables are used (independent of the
	  compiler).
	  octopus doesn't even get to the point where it reads the input
	  file.
	  Add --disable-gdlib so that -Bstatic/-static can be used again.
	  With
	  commerical compilers the -static options are more important than
	  having
	  gdlib support, I think.
	  
	  Since the nightly builds were not running while I was away, this
	  was not
	  captured. In the end I had to do bisection in the revision
	  numbers 2156-2310
	  to figure out that this problem was introduced with Miguels
	  commit in
	  r2185/r2186.
	  
	  o Adding optimized and debug executables to the package. They are
	  build with
	  the Intel compiler. The executables carry the program suffix
	  -intel-9.1 and
	  -intel-9.1-debug respectively. This is mainly used for nightly
	  builds and
	  regression testing. It increases the size of the packages
	  considerably,
	  so that we will use it only for internal purposes.
	  
	  o Remove outdated metis configure options.

2006-07-29 01:20  appel

	* : o adding extra treatment for scalar meshes with only a single
	  point.
	  o removing variable initialization inside the type definition
	  of scalar_mesh_t. this is not conform with the f90 standard.

2006-07-29 01:16  appel

	* : o adding calling interface for transpose operators. this is
	  required
	  for solvers like bi-conjugate gradients or some gmres flavours.
	  o adding verbosity flag and a bit more relaxed warning criteria.

2006-07-29 00:56  appel

	* : o adding emacs encoding lines also to the testsuite files.
	  (I've chosen shell-script mode to get a reasonable syntax
	  highlighting)
	  o some more missing svn:keywords

2006-07-29 00:50  appel

	* : o add emacs encoding line
	  o release preparation: update year entries in
	  the header (200x -> 200x-2006)

2006-07-28 20:27  xavier

	* : * Now when the restart lr density is not found for a certain
	  frequency, then octopus uses the restart lr density of the
	  closest
	  frequency available.

2006-07-28 20:24  appel

	* : Removing the nl_operator_operate_cmplx routine. Complex weights
	  are now treated by nl_operator_operate directly if op%cmplx_op
	  is enabled.

2006-07-28 20:14  appel

	* : Bug fixed. This was a copy'n paste mistake. Should be
	  op%cmplx_op
	  instead of op%const_w.

2006-07-28 20:12  appel

	* : stencil_center is a new field in nl_operator_t. The variable
	  contains the index value of the central stencil point (i.e. the
	  position which matches the application point of the stencil).

2006-07-28 20:09  appel

	* : o Fixing svn:keywords for the testsuite
	  o Adding a bunch of missing $Id:$

2006-07-28 20:07  xavier

	* : As pointed by Heiko, nspin was not correctly initialized. In
	  this case
	  is always 1, because information is not separated by spin
	  components.

2006-07-28 19:50  appel

	* : Remove unused variables.
	  
	  Xavier: can you have a look at this warning of the NAG compiler
	  
	  Warning: em_resp.F90, line 578: Symbol NSPIN referenced but never
	  set
	  detected at DYNAMIC_OUTPUT_INIT@<end-of-statement>
	  
	  Thanks.

2006-07-28 19:49  appel

	* : o The NAG compiler was complaining about too long subroutine
	  names (> 31 characters)
	  
	  o Adding GPL header to _inc file

2006-07-28 19:49  appel

	* : o Remove unused variables.
	  o Use tabstops of 2 instead of 4.
	  o Cleanup formatting a bit to make this code a
	  bit more coherent with the rest.

2006-07-28 18:40  appel

	* : svn:keywords "Id" property was missing for these files.

2006-07-28 18:37  appel

	* : o Currently the generation of info files from svn sources is
	  broken. Uncomment dh_installinfo so that deb packages can be
	  build without info files (master source for documentation is
	  the wiki anyways).
	  
	  o Build executables for x86_64 dynamically (used to revitalize
	  the nightly builds and testuite runs).

2006-07-28 18:34  appel

	* : If available use svn info to extract the current revision
	  number.
	  In this way the find run is avoided. Gives a noticeable speedup
	  on slow disks (e.g. Laptops).

2006-07-28 11:31  acastro

	* : Bug fixed.
	  
	  One more on the problem of passing strings from Fortran to C.

2006-07-27 23:37  xavier

	* : Now restart information for linear response is stored for every
	  frequency. Only the delta density is written, this appears to be
	  a
	  good compromise between disk space and calculation time.

2006-07-27 22:56  acastro

	* : Bug fixed.
	  
	  One of the optimal control tests was failing because of this.

2006-07-27 21:39  acastro

	* : About thirty something tests were failing with the NAG compiler
	  on the
	  opterons. The reason for most of the bugs is removed with the
	  change
	  that I now commit, which has to do with the Fortran to C
	  interface --
	  especially the string handling --, and with the difference
	  between int
	  and unsigned long int in 64 bit machines (I think).
	  
	  *However*:
	  This change removes the bug, but I am very uncomfortable changing
	  these subtleties in C, so I ask any of the C experts to take a
	  look.
	  
	  *And*:
	  Still five tests fail, due to unrelated reasons.

2006-07-26 13:39  xavier

	* : Corrected indentation.

2006-07-26 10:44  xavier

	* : * Now static polarizability is calculated by the dynamic
	  polarizability code. The old code can be used by setting the
	  PolStatic
	  variable.
	  * Updated tests.

2006-07-26 09:13  xavier

	* : Bigfix: An array was deallocated even when not allocated.

2006-07-25 13:26  acastro

	* : The construction of excited states was not possible in
	  the one-electron case if the spin-unpolarized mode was being
	  used. This was annoying.

2006-07-24 09:47  xavier

	* : Bugfix: pop_sub() wasn't been called when using return to exit.

2006-07-14 10:31  xavier

	* : * The sign of the complex part of polarizabilty was uncorrect.
	  * Now a linear/cross_section_tensor file is created, from the
	  information of
	  linear response. The format is the same of the
	  cross_section_tensor file
	  generated by oct-cross-section, altough it is not separated by
	  spin.

2006-07-14 10:17  xavier

	* : Added the option to print the values of the coordinates over
	  the grid, this
	  is not very informative, but can be used to calculate new
	  functions from
	  other functions, for instance dipole density can be calculated as
	  the
	  density times r.

2006-07-11 22:05  janwer

	* : removed some debug statements, td local targets should work

2006-07-11 21:33  acastro

	* : Bugs fixed.
	  
	  1. The loct_parse_expression routines were not working properly,
	  because the conversion from "Fortran string" to "C string" was
	  not
	  done.
	  
	  2. In the laser_field routine, when the laser field was read from
	  file, the index "i" was used to loop over the various laser
	  fields,
	  but in this case there is only one (this should be eventually
	  extended). This caused an out of bounds.

2006-07-11 13:29  janwer

	* : bug fixed in laser.F90. Now we can read the optimized field
	  directly for a td calculation.(thanks to Alberto)

2006-07-10 18:33  janwer

	* : I have changed the routines that read a laser pulse from a
	  file, so that it is compatible with the output of the optimal
	  control run. (Very likely that it is still buggy...).
	  The user interface for td targets was also modified (still
	  buggy..).
	  Will fix both in the next days.
	  
	  jan

2006-07-10 09:47  xavier

	* : Fixed another memory leak.

2006-07-08 10:06  xavier

	* : Fixed a memory leak when \delta elf was calculated several
	  times.

2006-07-07 15:49  xavier

	* : * Now functions are printed even when calculating
	  polarizabilities for
	  several frequencies. The files go to linear/freq_w (with w the
	  frequency).
	  
	  * Modified the dynamical linear response tolerance code, so its
	  value is
	  never decreased with respect to the previous iteration.

2006-07-07 14:54  acastro

	* : Bug fixed.
	  The calculation of the determinant stopped emitting an error if
	  the
	  determinant was null. It should only stop if there is an attempt
	  to
	  calculate the inverse matrix.

2006-07-07 12:36  acastro

	* : Changed a bit the interface to the occupied_states subroutine.
	  Now it is used by the casida module.

2006-07-06 19:26  acastro

	* : I got tired of looking up the documentation for the possible
	  envelopes
	  of the laser field, so I added the corresponding !%Option in the
	  documentations for the TDLasers block.

2006-07-05 16:12  xavier

	* : * Now the LR SCF uses variable precision to calculate the
	  wavefunctions.
	  * Added the posibility to print the polarizability density.

2006-07-04 17:41  xavier

	* : Updated test to match previous commit.

2006-07-04 17:40  xavier

	* : * The imaginary eta term was been applied with the wrong symbol
	  to the
	  equation for negative frequency perturbation.

2006-07-04 16:25  janwer

	* : introduced polarization dependent filters and psiT.0xx is
	  produced during optimization,
	  to monitor the improvement during the iterations (thanks, Esa).

2006-07-04 15:05  acastro

	* : The calculation of the populations of the ground state and/or
	  excited
	  states is now done without stupid repetitions of calculations,
	  that
	  made it very slow. Nevertheless, for large systems it may still
	  be a
	  slow calculation.
	  
	  Also, in order to do these calculations, one has to use now the
	  keyword "populations", not "gs_proj", as before. [This keywork
	  had to be
	  passed to the "TDOutput" input variable]. Since probably nobody
	  except
	  me was using this (I think), I hope that nobody cares. The
	  generated
	  file also changed name, to "populations". These changes describe
	  more
	  accurately what the file contains: populations of the ground
	  state and
	  possibly also of excited states, no only the ground state as
	  before.

2006-07-04 09:33  acastro

	* : The calculation of the matrix of dot products between the
	  orbitals of
	  two Slater determinants is now an independent routine. This is to
	  avoid recomputations.
	  
	  Only one interface for the many-particle dot products:
	  X(states_mpdotp), valid for both dot products between single
	  Slater
	  determinants, and between single Slater determinants and linear
	  combinations.

2006-07-03 22:01  xavier

	* : Bugfix: Replaced FC_FUNC by FC_FUNC_.

2006-07-03 18:25  acastro

	* : Bug fixed.
	  
	  A couple of problems in the lcao part, that could something
	  to do with ticket #37. But I do not know if it solves it since
	  I did not attempt to reproduce it.
	  
	  The uninitialized variables problem can be usually tracked well
	  by passing the -fpe0 -ftrapuv options when using the Intel
	  compilers.

2006-07-03 17:24  xavier

	* : Some tests were calling the "lanczos" eigensolver while there
	  is no
	  eigensolver option called like that. The lanczos option belongs
	  to the
	  TDExponentialMethod variable. Numerically this value matched with
	  'plan'
	  option, preconditioned lanczos. To avoid confusions the test were
	  corrected
	  and another number was asigned to the 'plan' option.
	  
	  WARNING: Some existing input files can fail after this change, if
	  this is the case
	  just put 'plan' instead of 'lanczos' in the EigenSolver variable.

2006-07-03 15:44  xavier

	* : * I was going to implement the smoothing preconditioner of Saad
	  to use it for
	  linear response, when i discovered that it was already
	  implemented :-D . It
	  is used for the preconditioned Lanczos eigen solver. So I moved
	  it into a
	  new module called preconditioners_m, hopefully it'll have more
	  preconditioners in the future.
	  
	  * I also submit a fix for the docu of MainAxis, that had the
	  wrong format.

2006-07-03 10:33  acastro

	* : Bug fixed. Forgot to put one "skip_header" so that an
	  "excitations"
	  file could be properly read.

2006-07-02 12:34  xavier

	* : * The configure script was using AC_FUNC_MALLOC and
	  AC_FUNC_REALLOC, this
	  two macros search for a GNU compatible malloc and realloc. If
	  they don't
	  find it they define malloc as rpl_malloc, the problem is that
	  later in the
	  configure the gsl check tries to use malloc and fails. This bug
	  was seen in
	  OSF, using the Compaq C compiler. As we don't need a gnu
	  compatible malloc
	  (the difference is the way it handles zero size allocations) the
	  presence of
	  this functions is now checked by AC_CHECK_FUNCS.
	  
	  * Documented two variables, fromScratch and MainAxis.

2006-07-01 19:31  xavier

	* : Put explicit boundaries in a vectorial operation that gfortran
	  didn't like.

2006-06-29 23:09  xavier

	* : Moved the variable documention of MultigridLevels to Mesh
	  section.

2006-06-29 18:29  acastro

	* : * Bug fixed: Some division by zero could be done when printing
	  the
	  progress bar if the process was very fast.
	  
	  * Moved spectrum_skip_header to module io (now it is called
	  io_skip_header), where it belongs.
	  
	  * Changed the way in which the "Casida vectors" are printed.
	  Instead
	  of the casida.vec file, now a directory called "excitations" is
	  created, and every excitation now has its own file, where the
	  weight
	  assigned to each of the particle hole transitions is written.
	  These
	  files are compatible with the format required by the
	  states_init_excited_state routine. In this way one can force the
	  calculation of the projections onto excited state number 1 to 3,
	  for example, by doing:
	  
	  %TDExcitedStatesToProject
	  "linear/excitations/00001"
	  "linear/excitations/00002"
	  "linear/excitations/00003"
	  %
	  
	  One also has to specify gs_proj in the list assigned to TDOutput.
	  This nomenclature is now somehow misleading, so maybe it will
	  have
	  to be changed.
	  
	  Beware that this feature is still not well tested.

2006-06-29 17:19  acastro

	* : The approximated projections onto excited states may now be
	  calculated. Still untested for most situations.

2006-06-29 16:12  acastro

	* : The is and ik variables in this line are always
	  1 and 1, for the moment being.
	  
	  This closes #36.

2006-06-29 14:58  acastro

	* : Added some initial code aimed to describe "excited states", by
	  which I
	  mean single-particle modifications of the ground state Slater
	  determinant (KS state, unless one is doing independent
	  particles).
	  
	  That is, one takes the Slater determinant, and changes one of the
	  occupied states by an unoccupied one (only one!). Then, one can
	  take
	  linear combinations of this "singly excited" determinants.
	  
	  The objective is to be able to monitor, during a time-evolution,
	  the
	  populations of excited states by looking at the dot products
	  between
	  the TDKS determinant and these excited states. Ideally, one
	  should use
	  the approximated excited states that are obtained in a Casida
	  calculation. Of course, a zillion approximations and theoretical
	  mistakes need to be ignored to believe in this, but it is the
	  best
	  that we can attempt for, I think.
	  
	  [Note that those populations are not calculated yet, I am only
	  committing the initial structure]

2006-06-28 17:15  xavier

	* : * Modified the input variables for linear_response and em_resp.
	  
	  * Documented all variables for linear_response and em_resp.
	  
	  * Improved output for both modules.
	  
	  * Added a new experimental solver, currently it's called hx. It
	  solves a
	  sequence of hermitian equations to find the solution of the
	  non-hermitian
	  equation. It seems to work better than other solvers, specially
	  for resonant
	  frequencies.
	  
	  * Updated polarizability tests to use new variables.

2006-06-28 14:59  acastro

	* : * Improved the way in which the dot product between Slater
	  determinants is being calculated. Now it is more flexible, and it
	  does not give erroneous numbers when states with empty or
	  half-filled orbitals are used.
	  
	  * The use of whatever partial occupation numbers is still not
	  possible. This should be detected and the program terminated. The
	  problem is not trivial, but I will try to address it.
	  
	  * As a result, I eliminated the calc_overlap function in
	  opt_control.F90, which was essentially doing this dot product,
	  but
	  in a wrong way for more than one electron.

2006-06-28 14:22  acastro

	* : Bugs fixed.
	  
	  One of them is trivial (in opt_control.F90); however the
	  other one is not that clear (in filters.F90), so please Jan
	  check it whenever you can.
	  
	  btw, last part of test 04-box_oct_long.test is not passed
	  in my box.

2006-06-28 07:51  acastro

	* : The dot product between Slater determinants now also considers
	  the
	  k-points.

2006-06-26 20:59  xavier

	* : Before the restart files could be left in an unconsistent state
	  if octopus
	  was killed while writing restart info. Now octopus ignores
	  SIGTERM and
	  SIGINT signals during calls to restart_write.
	  
	  This is done by the block_signals and unblock_signals functions.
	  
	  
	  
	  Now while writing restart info, octopus ignores signals. This way

2006-06-26 12:22  athimm

	* : Fix 18 documentation buglets that break var2xml. Addresses #20.

2006-06-26 11:49  janwer

	* : fixed the filter procedure and implemented td local targets

2006-06-26 11:48  janwer

	* : new tests for different features of OCT code:
	  filter, local, schemes.

2006-06-26 11:46  xavier

	* : * Added an return code != 1 to the error exits of
	  mk_varinfo.pl, so now the
	  build stops when there is a problem parsing the variable
	  documentation.
	  
	  * Fixed the documentation of LinearSolver variable and removed
	  the mention
	  to preconditioners because they are not correctly implemented.

2006-06-26 06:44  xavier

	* : The input files of the test didn't have the .inp extension.

2006-06-26 06:29  xavier

	* : More changes in linear response polarizabilities:
	  * Added a test to check this part of the code.
	  * Removed the code that read unoccupied orbitals, it was not
	  used.
	  * The self consistency is terminated after two iterations below
	  the
	  threshold.
	  * The default solver is chosen according to the type of
	  wavefunctions.
	  * Default iterations for the linear solver increased to 1000.
	  * Improved the documentation of variable PolLinearSolver.

2006-06-26 06:16  xavier

	* : Corrected the title of some tests. For full potential it was
	  uncorrect, the
	  other two the title was not capitalized as for the rest of the
	  tests.

2006-06-25 16:52  xavier

	* : A small bugfix.

2006-06-25 16:31  xavier

	* : * The lr code now uses the complex mixer.
	  * Moved the solve_HXeY function to linear_response_solver
	  * Removed many unused variables.

2006-06-25 11:37  xavier

	* : More unused variables removed.

2006-06-25 11:28  xavier

	* : Fixed a couple of unused variable warnings.

2006-06-25 09:39  xavier

	* : Now the mixer can also work with complex functions. This is
	  useful for the
	  solution of the Sternheimer equation where the \delta rho can be
	  complex.
	  
	  The mix_init subroutine now receives and optional argument that
	  indicates
	  the type of the function to be mixed, and the mixing subroutine
	  is replaced
	  by dmixing and zmixing.

2006-06-25 09:24  xavier

	* : Moved the definition of M_REAL and M_CMPLX to global_m so they
	  can be
	  used without depending on states_m.

2006-06-23 17:29  xavier

	* : I forgot to change one function call so the code was not
	  compiling.

2006-06-23 14:26  xavier

	* : Several small changes:
	  * The routine lr_solve_HXeY now receives the states as arguments.
	  * Some deallocate were missing
	  * Added preconditioning support for the lr linear solver, but
	  only very
	  very simple preconditioners are implemented.
	  * Added push_sub/pop_sub to some routines.

2006-06-23 12:12  acastro

	* : Bug fixed.
	  
	  The anisotropy is calculated from some number which should be
	  positive, but which may be in some cases a very small negative
	  number
	  due to numerical error. This caused an error.
	  
	  The debugging mode was not read in the cross_section program.

2006-06-23 08:46  xavier

	* : Renamed logical variable used in the initial assert to
	  something more
	  descriptive.

2006-06-22 19:38  xavier

	* : When a small complex term is added to the Sternheimer equation,
	  the operator
	  is not hermitian anymore, this causes problems for the conjugated
	  gradients
	  solver that is designed for hermitian operators.
	  
	  Now the lr_solve_Hxy routine can use another solvers that are
	  suitable for
	  non hermitian operators: Biconjugated Gradients (LR_BCG) and
	  Biconjugated
	  Gradients Stabilized (LR_BICGSTAB). The solver is chosen by the
	  PolLinearSolver variable, the default is still Conjugated
	  Gradients (LR_CG).

2006-06-21 15:15  xavier

	* : Added a new input variable to control the number of scf
	  interations in the
	  pol_lr module.

2006-06-20 21:05  acastro

	* : Bug fixed.
	  
	  The optimal control was failing with the NAG compiler in the
	  opteron
	  machines. The reason was some places where intent(out) was used
	  instead of intent(in).
	  
	  I took the opportunity to change read_state so that it assumes a
	  complex wavefunction, even if the ground state is real.
	  
	  I also added some push_sub/pop_sub to help further bug hunts.

2006-06-20 16:23  marques

	* : Added a finite cylinder cutoff for the poisson solver using
	  FFTS.
	  It is activated by "PoissonSolver = fft_cyl", just like in the 1D
	  periodic case.
	  
	  The poisson FFT is a bit messy, and requires some cleaning. I
	  will try
	  to do it later on.
	  
	  This work was done by Luis Matos.

2006-06-20 10:12  xavier

	* : * All restart info for pol_lr is now written under
	  tmp/restart_pol_lr/ .
	  * Info is appended to the linear/dynpols when not running from
	  scratch.
	  * When starting from scratch, response wfns are initialized to
	  zero and when
	  calculating for multiple frequencies are initialized with the
	  result from
	  the previous frequency.

2006-06-20 08:52  acastro

	* : The compile was failing with NAG compiler due to the problem
	  with long lines.

2006-06-19 23:38  xavier

	* : Now the pol_lr mode has restart capabilities. I used the same
	  restart
	  functions for gs wfns, adding and extra optional parameter, this
	  not very
	  elegant, but avoids redundant code (if we only had inheritance...
	  ;-).

2006-06-19 15:40  xavier

	* : * Lots of code cleaning.
	  * Removed commented code.
	  * Improved output (no more print*).

2006-06-19 15:34  xavier

	* : * Some code cleaning.
	  * A deallocate was missing.

2006-06-18 12:42  athimm

	* : Resurrect octopus.texi with history and fix .cvsignore.

2006-06-18 11:43  athimm

	* : Forgotten to remove build-aux from svn.

2006-06-18 11:35  athimm

	* : Exclude generated files from svn.

2006-06-18 11:32  athimm

	* : Exclude build-aux from entering svn.

2006-06-18 10:54  acastro

	* : Bug fixed.
	  
	  The fft_corrected PoissonSolver was producing a shifted potential
	  when
	  the box geometry implied a non-cubical FFT box. The error was
	  just a
	  shift, but it implied all energies were shifted. The reason was
	  that
	  the surface average integral that needs to be done assumed a
	  cube.

2006-06-16 08:40  micael

	* : The number of clock tics per second can be machine dependend
	  (ex: the Linux and Mac OS X values
	  are different). Nevertheless, there's no need to hardwire it,
	  because that number is provided
	  in the time.h header.

2006-06-16 08:29  marques

	* : Removed m4 files from the distribution (when making dist)

2006-06-16 08:25  rozzi

	* : portability bugfix

2006-06-15 19:50  micael

	* : Changed the fix of the last NP/NP_PART issue to make it more
	  efficient.

2006-06-15 17:47  acastro

	* : Bug fixed.
	  
	  All time-dependent calculations in spinors mode were compromised,
	  if
	  the standard, cheby or lanczos exponentials were used. The second
	  component of the spinors was badly treated. It is one of the
	  NP/NP_PART problem, so this bug has been around probably for a
	  while...

2006-06-15 15:12  acastro

	* : Some parenthesis too many in some format descriptors were found
	  by
	  Tobias.

2006-06-15 15:02  acastro

	* : Substituted the deprecated complex*16 by the complex(8) syntax.
	  
	  This closes #28.

2006-06-15 09:09  janwer

	* : fixed typo

2006-06-15 09:08  janwer

	* : o fixes according to Tobias
	  o preparing time-dependent targets

2006-06-15 08:07  janwer

	* : updated tests, now they should work
	  (i forgot to check them in...)
	  jan

2006-06-14 16:54  acastro

	* : The loct_parse_expression subroutine now needs one more extra
	  argument, the time, which is assigned to the "t" variable in the
	  input
	  file.

2006-06-14 11:44  acastro

	* : The "freq" and "time" tags to be used for the OCTFilter block
	  were not
	  defined as an "!%Option tag", and thus were not put in the
	  variables
	  file, and thus were not really available to the user. I defined
	  them,
	  but changing the name to time_filter and frequency_filter, since
	  "time" and "freq" could be wanted by the user, or required for
	  other
	  purposes.

2006-06-14 11:10  janwer

	* : replaced psi = initial_st by states_copy routine.
	  Overloading seems to fail here (why ? see link).
	  Now the double check works !
	  
	  jan
	  
	  every pointer is a new surprise...
	  
	  http://www.cs.rpi.edu/~szymansk/OOF90/bugs.html#6

2006-06-14 11:06  acastro

	* : Initialized some variables to zero. Otherwise I was
	  getting some overflows when running the optimal control
	  stuff.

2006-06-14 08:14  marques

	* : M4 files changed place, so make dist was failing.

2006-06-13 22:59  janwer

	* : added a double check feature which immediately indicated a bug
	  which needs to be found

2006-06-13 22:56  janwer

	* : changes in opt_control.F90 required update of the test

2006-06-13 16:10  acastro

	* : Bug fixed.
	  
	  I got some segmentation fault due to td_tg not being initialised.

2006-06-13 13:00  acastro

	* : The ffts are now not any more defined in terms of a simulation
	  box,
	  but in terms of a set of three integers. [If the two last ones
	  are
	  one, we have a 1D transform, if the last one is one, we have a 2D
	  transform]. The 1D transforms that had been recently added to
	  fftw3.F90 are now gone; one can now use the normal transforms.

2006-06-12 21:56  acastro

	* : * Now the FFTs are also allowd for 1D cases. Only if you
	  use fftw3, though. I really don't know why we did not allow
	  that before. This permits to use split operator for 1d runs.
	  * Bug fixed in the printing of the simul box for parallelepipeds.
	  * Reduced the requirement of the gdlib: now it only emits a
	  warning if it is not found, instead of stopping the configure.

2006-06-12 18:54  janwer

	* : removing previously introduced bugs :-)
	  it looks like 2D is working

2006-06-12 18:53  janwer

	* : new tests and fixes to the old one

2006-06-12 16:49  acastro

	* : Now one can print the dipole transition elements between
	  Kohn-Sham
	  states. This is done by setting Output = ksdipole. I used the
	  output
	  slot that was fixed, but never used before, to the transition
	  densities.

2006-06-12 15:59  xavier

	* : This is part of the cleaning of the linear response code:
	  * Added some comments
	  * Occupations are now considered in X(lr_orth_response)
	  * Removed the experimental gauss-jacobi solver
	  * Added explicit limits to some vectorial operations

2006-06-12 15:06  xavier

	* : Bugfix: For independent particles the hartree and fxc terms
	  were considered
	  in some parts.

2006-06-12 14:06  janwer

	* : Hi Folks,
	  I have updated the test (faster and hopefully more stable),
	  removed some problems with the NAG (and very likely created new
	  ones).
	  
	  With setting the OCTPolarization Block 3D runs should work...but
	  are UNTESTED as yet. Also, TDDFT remains a dream (or nightmare?).
	  
	  jan

2006-06-12 13:45  acastro

	* : Bug fixed.
	  
	  The LCAO mode required in the input file was ignored in the unocc
	  calculations. This led to convergence problems for some systems.

2006-06-12 13:25  acastro

	* : Bug fixed.
	  
	  The opt_control test is now passed at least in my
	  machine. Some of the fixes that I did are unclear, however,
	  so I will check with Jan. Let us see if we can stabilise
	  things a little bit, at least.

2006-06-12 13:03  acastro

	* : Bug fixed.
	  A small inconsistency in states_copy.

2006-06-11 17:30  micael

	* : Added some "private" statements with a distant hope to fix a
	  compilation problem.

2006-06-09 13:23  xavier

	* : Linear response elf is working, including the frequency
	  dependent version.

2006-06-09 09:27  xavier

	* : The states_output routine verifies that wavefunctions are real
	  before trying
	  to output the current.

2006-06-08 11:07  xavier

	* : Now the values of beta are printed in scientifi format.

2006-06-08 10:46  marques

	* : Forgot this file

2006-06-08 08:21  marques

	* : Have you ever wondered what are the solutions of the
	  Schroedinger equation
	  inside a fractal box...
	  
	  I added a fairly esoteric option to octopus. Now one can define a
	  simulation
	  box (in 2D) using an image map. The points painted in white are
	  considered to
	  be inside the simulation box, while the rest of the points are
	  outside. This
	  is quite experimental, so do not expect miracles.
	  
	  For reading the images, I decided to use the GD library. This
	  means that one
	  can use .gif, .jpg, and .png as input formats. There is very
	  basic support
	  for this library in liboct/oct_gdlib_f.c.
	  
	  Of course that you can disable the whole thing configuring
	  octopus with the
	  flag --disable-gdlib

2006-06-07 14:57  xavier

	* : A line was too long for gfortran compiler.

2006-06-06 16:09  xavier

	* : Now the hyperpolarizabiliy density can be written, this is
	  quantity that
	  integrates to the hyperpolarizability. The associated variable is
	  pol_density.

2006-06-06 13:36  xavier

	* : Bugfix: Polarizabilities were wrong for system with unoccupied
	  states (very
	  small non-zero occupations), now a threshold of 10^-4 for
	  occupations is
	  used to descriminate between occupied/unoccupies states.

2006-06-04 15:46  marques

	* : I belive that the linear ELF is working. However, results for
	  small densities (but large elfs) are questionable. Take this with
	  care.
	  
	  I also cleaned up a little bit the ELF routine. In particular,
	  now both D and ) are multiplied by rho, which avoids a division
	  by rho.

2006-06-03 11:41  acastro

	* : The mf.net utility now has a "script mode", useful for scripts
	  to
	  produce movies.
	  
	  The procedure would be to first use mf.net in the normal mode,
	  until
	  the "camera setup" is nice enough. The program now saves a file
	  "camera.dx" file with the camera setup. Then one reverts to
	  script
	  mode, specifying this camera file. One can then save the mf.net
	  file
	  (with another name, for example myscript.net) and then one can
	  run the
	  program with:
	  
	  dx -script -file myscript.net
	  
	  which would produce not an image in the display, but an output
	  file
	  called mf_output.tiff.
	  
	  With some sufficiently smart bash or perl or whatever script, one
	  can
	  then run succesively the myscript.net modifying the input names
	  at
	  each time, thus producing a series of tiff files that can then be
	  transformed into a movie.

2006-06-03 08:32  acastro

	* : Now one has the option of showing or not the colorbar
	  when plotting a slab.

2006-06-01 16:09  janwer

	* : nag fix - part 2

2006-06-01 12:20  janwer

	* : filters.F90 did not compile with NAG:
	  blk has to be integer of POINTER_SIZE
	  
	  j
	  
	  nag:
	  1. To annoy by constant scolding, complaining, or urging.
	  2. To torment persistently, as with anxiety or pain.

2006-06-01 09:06  xavier

	* : Portability fix, variable declaration was not in the beginning
	  of file.

2006-05-31 20:39  acastro

	* : The mf.net dx program now prints by default a file called
	  mf_output.tiff with a tiff-format image of whatever has been
	  executed.
	  
	  When running interactively it is not really important, since one
	  can
	  always save an image file from the image window. However, it is
	  necessary if one intends to use mf.net as an automatic script to
	  generate the images.

2006-05-31 19:00  janwer

	* : lots of new features in control module, a 1d fft routine, and
	  testsuite
	  now we have:
	  o 3 control algorithms
	  o filters
	  o time-dependent penalty factors
	  o opt. on predefined fluences
	  o and minor documentation
	  
	  everything still for 1 particle and 1d
	  
	  jan

2006-05-30 15:47  xavier

	* : Putting the elf function to zero for small densities is still
	  needed.

2006-05-30 14:06  xavier

	* : Removed a mysterious external variable in besselint function
	  that was not used and not defined anywhere.

2006-05-30 10:01  athimm

	* : Lower version requirement for gettext (experimental).

2006-05-29 23:52  athimm

	* : Even more i18n bits (still trying to find all non-generated
	  bits).

2006-05-29 23:51  athimm

	* : Some more i18n bits.

2006-05-29 22:04  athimm

	* : o modernize autotools support
	  - move *.m4 from build to m4 (which is the canonical location)
	  - point AC_CONFIG_AUX_DIR to build-aux
	  
	  o Reenable python by default, let's hope nothing explodes

2006-05-29 21:59  athimm

	* : o Rip out glade, do it all by hand
	  It was becoming combersome to keep an overview of what setting
	  one
	  had done in glade.
	  o Make applications aware of install locations for variables.xml
	  and
	  oct_main.jpg
	  o Install oct_main.jpg
	  o Add internationalization support
	  - Add some de_DE support for demonstrating its use

2006-05-29 17:39  xavier

	* : Updated version of the lr_elf, not working though.

2006-05-29 11:52  xavier

	* : * Removed the ' in variable doc.
	  * Closes #22 .

2006-05-29 11:34  xavier

	* : A "(" was missing.

2006-05-28 20:22  micael

	* : This fixes Daniele's problem with the angular momentum. The bug
	  only showed up
	  when using the parallelization in states. It seems some compilers
	  have problems
	  with arrays which have a first element different than 1...

2006-05-26 16:48  xavier

	* : Several fixes to all electron specie (with help of Micael):
	  * s%niwfs was not initialized. Now is initialized to 2*z_val.
	  * LCAO doesn't work with this specie, put some warnings. I will
	  try to fix
	  it later.
	  * Fixed np/np_part issue when calculating the potential.
	  * Corrected a push_sub tag.
	  * Added a regression test.

2006-05-25 22:23  athimm

	* : Fix typo in distutils parameters. When embedded hyphen becomes
	  an underscore, but we're calling out-of-script.

2006-05-25 21:55  appel

	* : Changing the grammar to what we agreed, i.e.
	  
	  for functions: f(x), f(x,y)
	  for complex numbers: {a, b}

2006-05-25 18:38  acastro

	* : o The modification of the occupations should be
	  done before the density and KS potentials is
	  calculated, so that the td is started with the
	  proper potential (I think, take a look if you are
	  not too sure about what I am saying).
	  o Pretty printing of the orbital substitution through
	  user defined functions.
	  o Stupid dx has problems reading Fortran formatted data
	  sometimes. I think this format is the safest.

2006-05-25 16:43  acastro

	* : Bug fixed.
	  
	  Some portion of code should be inside an if statement,
	  not outside.

2006-05-25 11:14  athimm

	* : Try to respect configure's paths.
	  
	  Since this may break builds, python is currently disabled by
	  default. Use --enable-python to test the paths.
	  
	  Pinging Heiko: Does this work now in the nightly builds setup
	  (you'll
	  need to test with --enable-python)? DESTDIR usage should also be
	  safe.

2006-05-24 17:23  xavier

	* : * Replacing the external call to mktemp by a library call to
	  tempdir works
	  fine on Solaris. (thanks Tobias :-)
	  * Closes #15 .

2006-05-24 17:13  acastro

	* : I changed slightly the format in which the numbers are
	  written on output. I added a specification for the number
	  of digits that describe the exponential. The reason is that
	  some compilers badly printed very small numbers: instead
	  of putting
	  1.00000E-100,
	  they would put
	  1.00000-100,
	  getting rid of the "E".
	  
	  Sometimes we have these small numbers. This confuses gnuplot,
	  for example, and also dx.

2006-05-24 16:32  acastro

	* : Bug fixed.
	  The list of wavefunction should be plotted also if the
	  wfs_sqmod option is selected.

2006-05-24 13:29  athimm

	* : distutils don't match with autotools. Disable installation
	  until a proper solution is found.

2006-05-24 10:21  xavier

	* : * Fixed the output redirection according to the suggestions by
	  Tobias.
	  * Closes #18 .

2006-05-24 10:16  athimm

	* : a) python and xml
	  - Make python conditional, on by default.
	  
	  Use --disable-python to turn off python (see ./configure --help)
	  
	  - Remove variables.xml generation from main code, make it
	  python-private. variables.xml are only used by the GUI. Let it
	  live
	  under share for now, we'll see were we'll put it in the future,
	  perhaps it will be removed altogether.
	  
	  b) Add some vpath fixes

2006-05-24 09:36  acastro

	* : Bug fixed.
	  I slipped this one in 2079. The problem is that it
	  did not cause immediate trouble, but rather unexplainable
	  overflows in the middle of the runs...

2006-05-23 17:41  xavier

	* : More solaris compatibility issues:
	  * Replaced "cp -a" calls by "cp -r", -a is not available.
	  * Replaced the "&>" redirection by "2>1 >" which is sh friendly.

2006-05-23 17:36  xavier

	* : The oct_printrecipe uses the scandir and alphasort, are some
	  sort BSDism and
	  are not always available. Now it this functions are not found by
	  the
	  configure, this function does nothing.
	  
	  System V users won't be able to enjoy our tasteful recipes ;-)

2006-05-23 15:08  xavier

	* : Using an alternative* way of writing the elf, there are not
	  numerical
	  problems when rho -> 0.
	  
	  * 1/(1+(d/d0)^2) = d0^2/(d0^2+d^2)

2006-05-23 11:48  acastro

	* : Added a new function in the parser, oct_parse_expression1,
	  accesed in the Fortran code throuth the interface
	  loct_parse_expreession. Hopefully the example put in
	  the comment in liboct_parsers.F90 should be self explanatory.
	  
	  There is a tricky thing about the possibility of using "reserved"
	  symbols in the definition of the function that is parsed. I
	  tested it, and it does not seem to cause any problem.
	  
	  This closes #14.

2006-05-23 09:04  appel

	* : Modified the grammar of the parser to allow for functions
	  with two arguments. Since the (x, y) syntax is already used
	  for complex numbers I introduced square brackets instead. The
	  parser is now aware of max[a, b] and min[a, b] in formula
	  strings. If a and b are complex numbers then only the real
	  parts are considered (could be easily changed though). This
	  closes #13.
	  
	  I kept normal brackets () for functions with a single argument.
	  But it would be more consistent to have either
	  
	  exp[-(0,1)*k*x], min[x, y], max[x, y] (Mathematica like syntax
	  for functions)
	  
	  or
	  
	  exp(-[0,1]*k*x), min(x, y), max(x, y) (closer to current syntax
	  for functions)
	  
	  
	  What do you like better? Both variants will break current
	  input files (BTW that would be an ABI change for the input
	  file :).

2006-05-22 18:39  micael

	* : I believe this "uninitialized variable" issue was not solved
	  properly.
	  The code was crashing with the parallelization in domains because
	  sometimes
	  the size of rho in this routine is m%np.

2006-05-22 17:41  xavier

	* : * Added alternative code to use when strndup is not found.
	  * This fixes #12
	  
	  Maybe we can just leave the alternative code, which is 3 lines
	  long and uses
	  malloc and strncpy that are standard. What do you think?

2006-05-22 11:56  micael

	* : Corrected another function name inconsistency between upper and
	  lower case.

2006-05-22 07:48  acastro

	* : Some other pop_sub was missing. I also added a couple
	  of more push_sub/pop_sub pairs.

2006-05-21 23:20  xavier

	* : * Now gfortran passes the multigrid test. It seems there are
	  some problems
	  with 1 point grids, so I changed the default number of grids.
	  
	  * Also added a match for the number of grid in the multigrid
	  test.

2006-05-21 22:01  xavier

	* : Fixed several uninitialized variable warnings, for most cases
	  the code was
	  correct, except for xyz_adjust, where the total mass was
	  accumulated over a
	  uninitialized variable.

2006-05-21 20:35  acastro

	* : X(epot_forces) was now unused.

2006-05-21 19:44  micael

	* : linear_response_out.F90 was missing from the distribution.

2006-05-21 19:41  acastro

	* : Bug fixed.
	  Just another case of pop_subs missing.

2006-05-21 18:52  micael

	* : Removed last references to octopus_cmplx from the configure
	  script.

2006-05-21 14:09  athimm

	* : Make python scripts executable. This fixes #10.

2006-05-21 12:30  acastro

	* : Yet more uninitialized variables trapped by the compiler.

2006-05-21 12:19  appel

	* : fftw2 support was broken. Due to missing use statements the
	  code was not compiling in that case.

2006-05-21 12:05  acastro

	* : Bugs fixed.
	  One np/np_part, and some more problems related to unitialized
	  variables.

2006-05-21 11:13  acastro

	* : Bug fixed.
	  Once again, problems related to uninintialized variables.

2006-05-21 10:02  appel

	* : All tests that are using LCAO were still failing with the NAG
	  compiler.

2006-05-21 09:10  athimm

	* : Add distutils support, also add some generated files to
	  .cvsignore/svn:ignore.

2006-05-20 21:15  xavier

	* : Put a nullify for pointers in lcao_init, this avoids problems
	  with gfortran
	  that appears to have a buggy associated() subroutine.
	  With this gfortran now passes all tests, except multigrid.

2006-05-20 19:39  xavier

	* : Added push/pop sub calls to functions that call fftw3. This
	  makes easier to find
	  incompatibilities when calling external libraries.

2006-05-20 11:50  micael

	* : WaveFunctionsType is gone. This means the code should be able
	  to decide
	  if it has to use complex or real wave-functions.
	  For this to work properly, all the states_t variables in the code
	  should
	  be "nullified" with the states_null routine. Also, note that the
	  optional
	  argument in states_allocate_wfns always take precedence.

2006-05-20 10:20  xavier

	* : Some subroutines calls were made passing the same argument
	  twice with
	  different intent.

2006-05-19 15:55  xavier

	* : An argument defined as out, when it should be inout.

2006-05-19 15:54  appel

	* : For the moment I put AM_PATH_PYTHON back in since
	  share/Makefile.am
	  still contains @PYTHON@. Perhaps we can organize that differently
	  in the future ...

2006-05-19 15:48  appel

	* : r2118 has build problems since var2xml.py did not move
	  completely.

2006-05-19 15:19  xavier

	* : A new output quantity can be printed: dipole_density.

2006-05-19 15:17  athimm

	* : Update svn:ignore recursively.

2006-05-19 15:16  athimm

	* : o octopus-gui: Main script for calling the GUI (should had been
	  committed in r2112)
	  o Ignore *.pyc in svn
	  o Fix a type in opt_control.F90 ("String" should be "string")

2006-05-19 15:13  athimm

	* : Move var2xml.py to the python subdir.

2006-05-19 15:11  athimm

	* : Add symlinks to AUTHORS, NEWS etc. to make autotools happy

2006-05-19 15:10  athimm

	* : Add *.bak to global ignore files

2006-05-19 15:09  athimm

	* : Octopus python packages.
	  
	  Any octopus module/package will get under the octopus
	  hierarchy/namespace.
	  
	  Import into your python scripts with
	  
	  import octopus.<xxx>
	  
	  This commit contains
	  
	  o variable management
	  - basic variable treatment in sections, trees etc.
	  - XML input/output
	  o first GUI bits and bolts
	  - top level widgets
	  - TreeView of variables
	  - Check out the splashscreen and the about dialog ;)
	  
	  Note: There are some filechooser bits in progress, don't pay
	  attention.

2006-05-19 15:05  athimm

	* : python subdir
	  
	  This will hold the GUI, but also several non-GUI tools.

2006-05-19 15:03  athimm

	* : Hi, I'm Axel, and I'm living next door to Alice.

2006-05-19 10:56  micael

	* : When running periodic systems WaveFunctionsType should not be
	  read from the input file
	  as that information will be overwriten. Otherwise the content of
	  the file out.oct could
	  be misleading.

2006-05-18 20:59  appel

	* : Since they contain X() macros the xc_OEP_{x,SIC,KLI}.F90
	  files belong now also to the family of _inc files.

2006-05-18 20:47  appel

	* : These tests were originally written by Alberto for real
	  wave functions. Also remove here WaveFunctionsType = complex
	  (was inconsistent anyways since test 01 and 02 were for complex
	  and 03 and 04 for real wave functions)
	  
	  BTW: I noticed that we "lost" some revision history due to
	  some file renames in old cvs times and the migration to svn
	  (in the sense that some things are not visible in trac). If
	  possible I'd recommend to keep the cvsweb for lookup purposes
	  as long as possible.

2006-05-18 20:33  appel

	* : Because of the previous changeset [2105], the explicit
	  statement
	  of WaveFunctionsType = complex can be removed.

2006-05-18 20:30  appel

	* : Like in the case of TD calculations the code will now
	  automatically
	  choose complex wave functions for periodic systems. There's no
	  need
	  to specify WaveFunctionsType = complex explicitely in the input
	  file
	  (as this is a direct corollary to PeriodicDimensions > 0).

2006-05-18 16:27  xavier

	* : A bit of cleaning in the selection of the wavefunctions type.
	  It's chosen based on the value of delta (the imaginary part of
	  the
	  frequency).

2006-05-18 16:16  micael

	* : CDFT requirement of complex wavefunctions cannot be checked
	  inside
	  states_allocate_wfns. This will have to be done somewhere else.

2006-05-18 14:49  micael

	* : WaveFunctionsType is now read inside the states_allocate_wfns
	  routine.
	  Also, states_allocate_wfns now as an optional argument that
	  allows
	  to set the wave-functions type without reading it from the input
	  file.
	  
	  I used this feature several places in the code.

2006-05-18 01:26  appel

	* : The new optimal control code did not compile with the NAG
	  compiler. Also introduced oct_algorithm_* variables.

2006-05-18 00:44  appel

	* : Only h%d%wfs_type is available for epot_init.

2006-05-18 00:30  appel

	* : Resolved this FIXME. If a static magnetic field is applied
	  the user should use complex wavefunctions.

2006-05-18 00:16  appel

	* : *aaaargh*
	  
	  Micael: what is your notion of a revision control system like
	  cvs or svn? There is no point in using such a system if you
	  keep an old copy of the files and simply copy your old version
	  over to the latest checkout of HEAD/trunk. In this way you
	  essentially _undo_ the changes that other people did in the
	  meantime!!!! Ever heard something about resolving version
	  conflicts? I recommend vimdiff as an excellent tool for this
	  purpose ...
	  
	  
	  Fixed the build of the MPI executable.

2006-05-17 23:59  appel

	* : These files are empty and can be removed.

2006-05-17 23:30  appel

	* : There was some debug output left over.

2006-05-17 22:59  appel

	* : Perl or sed run was cluttering this expression.

2006-05-17 22:43  appel

	* : Removing the complex executable also from the Debian package
	  build.

2006-05-17 22:31  appel

	* : Remove octopus_cmplx also from the remaining testfiles and
	  from the testsuite scripts.

2006-05-17 22:26  appel

	* : Due to the removal of the complex executable these eigensolver
	  files are now actually _inc files.

2006-05-17 22:22  appel

	* : Code did not compile with --with-arpack.

2006-05-17 20:41  xavier

	* : The option gs is also defined in opt_

2006-05-17 16:06  micael

	* : Forgot to remove a R_TOTYPE macro.
	  
	  BTW, it is not a good idea to initializa a complex variable with
	  R_TOTYPE(M_ZERO)...

2006-05-17 15:55  micael

	* : octopus_cmplx is gone :)
	  
	  This obviously implied a lot of changes:
	  - there is now a new variable called WaveFunctionsType to decide
	  if
	  one wants to use complex or real wavefunctions.
	  - some macros like R_TYPE and X() are now only accessible in the
	  *_inc.F90 files.
	  - I had to move some routines from and to the *_inc.F90 files.
	  
	  The code passes all the serial tests (I update the complex
	  tests), but I guess
	  somethings probably got broken.
	  I did not check the mpi executable. I think there might be some
	  problem with the TS()
	  macro. Can someone check this?
	  Another issue is the places in the code were the wave-functions
	  have to be real/complex.
	  For the cases I knew of, the code will either stop if the value
	  of WaveFunctionsType in
	  the input file is not correct or ignore it (maybe this is not
	  very good, but I did not
	  know how to do it otherwise).
	  
	  During this changes I found several inconsistencies in the use of
	  real/complex
	  variables and related macros. For example, in the em_resp module,
	  R_CONJ() was used
	  with some variables that were always complex... In other places
	  real values were
	  assigned to complex variables, etc.
	  
	  I guess the code will need some testing and cleaning during the
	  next couple of weeks.

2006-05-17 14:22  janwer

	* : write(6,*) 'Hello Octopus-World'
	  
	  opt_control.F90:
	  o I have reworked the module opt_control a little. At least for
	  1d and 1particle it is working. (Method: zbr98)
	  o more particles and dimensions are coming
	  
	  lasers.F90:
	  o added a constant envelope for the laser field
	  o fixed the numerical envelope in subroutine laser_potential
	  o ! the mapping from t -> time-grid seems to be wrong (and is
	  inconsistent with other parts of the code)
	  
	  cheers, Jan

2006-05-17 01:25  appel

	* : This is a MPI cleanup. All MPI calls use now consistently
	  mpi_err as error variable. This allowed to remove several
	  ifdefs. We have now for the syntax:
	  
	  example
	  uppercase : ALLOCATE - macros
	  mixed : MPI_Comm_Split - routines from MPI standard
	  lowercase : mpi_grp_init - our own MPI routines

2006-05-16 23:39  appel

	* : This file is identical to mpi_debug_inc.F90 and was not used.
	  Didn't trace back how it slipped in ...

2006-05-16 22:00  appel

	* : o Added interface for stat syscall. It seems that the Fortran
	  inquire
	  can only cope with files but not with directories.
	  
	  o Octopus checks now for the variables InputDir and OutputDir.
	  They will
	  be used to pipe different runs into each other. Consider the
	  following
	  directory structure of an "octopus-project"
	  
	  project/gs/gs_output
	  td/td_output
	  
	  (cf.
	  http://www.tddft.org/programs/octopus/wiki/index.php?title=Projects_and_Runs)
	  
	  The inp in gs will e.g. contain OutputDir = "gs_output" and the
	  inp
	  in td will contain
	  
	  InputDir = "../gs/gs_output"
	  OutputDir = "td_output"
	  
	  The "../gs/gs_output" represents effectively the pipe. In
	  contrast
	  to a checkpointing directory (like tmp/) the code should treat
	  InputDir
	  as read-only to guarantee reproducibility in a sequence of runs.
	  
	  So far I did not really touch the restart business as this
	  involves a
	  change of notion for the fromScratch variable. We should discuss
	  that in
	  the next meeting.
	  
	  o As suggested by Xavier the oct-status files are now written to
	  a separate
	  status directory. Also out.oct is now living there.

2006-05-16 21:57  appel

	* : Fixed out of bounds of x() when calling specie_get_glocal in
	  local_RS.

2006-05-16 21:56  appel

	* : This routine had a pop_sub but no push_sub. This was
	  effectively hidden
	  before changeset [2080] introduced a correction in a different
	  place.

2006-05-16 21:53  appel

	* : Removing unused variables. Corrected and added a few push/pop
	  sub calls.

2006-05-15 23:22  acastro

	* : Bug fixed.
	  Just one pop_sub missing.

2006-05-15 22:49  acastro

	* : Another couple of bugs related to the uninitialized variables:
	  * First of all, some routines with intent(out) wave-function
	  arguments fill only the elements from 1 to NP, leaving
	  uninitialized
	  the NP+1:NP_PART part. If that part is to be preserved, then
	  intent(inout)
	  should be used. Otherwise, the NP+1:NP_PART may cause trouble if
	  it is
	  used, since one cannot be sure that it will be zero, or that it
	  will
	  be preserved.
	  * The kinetic energy, if the atoms don't move, should be null,
	  and
	  not a NaN.

2006-05-15 22:11  acastro

	* : Bug fixed.
	  Yet another uninitialized variable (pot_re) was being
	  used. The Intel compiler catches them if you make use of the
	  -nan -ieee=none options.

2006-05-15 17:03  xavier

	* : Now also the density variation can be written.
	  This density is in agree with the one obtained from DFPT.

2006-05-15 09:59  xavier

	* : The Rayleigh-Ritz projection (re-diagonalization of the
	  hamiltonian in the space
	  spanned by the eigenvectors found by the eigensolver) was not
	  used and the
	  subroutine that does it was not working correctly. I have fixed
	  the subroutine
	  and added the possibilty of doing this subspace diagonalization
	  after the
	  eigensolver. By default this is not done and it can be activated
	  setting the
	  EigenSolverSubspaceDiag variable to true.

2006-05-14 11:07  athimm

	* : Some entities would not be properly handled in the
	  pretty-printing output.

2006-05-14 10:59  athimm

	* : Removing top level configure.
	  
	  I had added this in r2041 (2006-05-05) before going into
	  discussion
	  about including or not generated files (by autotools or
	  ourselves)
	  and/or using the maintainer mode.
	  
	  Having configure in the repo, but not Makefile.ins is
	  inconsistent. Following the conservative approach, I'm dumping it
	  again. Should the team decide to follow the school of adding
	  generated
	  files to the repo it can easily be resurrected.

2006-05-14 10:52  athimm

	* : Ignore config.h stamp file.

2006-05-14 10:45  athimm

	* : trunk is targeting for 2.1 or maybe even 3.0.

2006-05-13 22:36  acastro

	* : Bugs fixed.
	  Some more problems related to uninitialized variables, that
	  cause trouble or not depending on the compiler, etc.

2006-05-13 20:34  acastro

	* : Bug fixed.
	  One intent(out) which should be intent(inout), or else
	  it causes troubles sometimes.

2006-05-13 12:12  athimm

	* : Also set svn:keywords for $ to work ... >:(

2006-05-13 12:03  athimm

	* : Typo in : $ tag

2006-05-13 12:01  athimm

	* : Add documentation/licensing/versioning

2006-05-12 18:49  athimm

	* : Use $(MAKE) instead of make for recursive calls.

2006-05-12 18:45  athimm

	* : Generate the XML file directly from the sources and only
	  recrete it
	  when the sources change.
	  
	  Previously it would depend on varinfo. But varinfo is already
	  processed and not a pristine copy of the embedded variable
	  definitions. Furthermore varinfo is rebuilt unconditionally while
	  we
	  now only rebuild when some *.F90 file has changed.

2006-05-12 18:41  athimm

	* : Sanitize .cvsignore and recursively feed svn:ignore with them.
	  
	  The entries mirror the school of not committing generated files
	  into
	  the repository. Whether this is good or bad needs to be decided,
	  and
	  I'm probably in favour of adding them (as well as maintainer-mode
	  protection), but until this is agreed upon the current curse is
	  `minimal'.

2006-05-12 18:35  athimm

	* : Completely rewrote the XML creator.
	  
	  o description of variables and of options are now untangled into
	  XML elements
	  otherwise the XML document may end up being broken
	  o all spurious < > & tags are converted to entities
	  o pretty-printing output
	  
	  The output is now (hopefully) always XML compliant.

2006-05-12 18:26  athimm

	* : Found a couple of tag mismatches while working on the xml
	  converter.

2006-05-12 16:44  xavier

	* : Corrected a function name that was not consistent between upper
	  and lower
	  case. This was revealed by the Absoft OS X/PPC compiler. It seems
	  that
	  normally we don't use any fortran compiler that produces upper
	  case symbols.
	  
	  This should be backported to 2.0.x.

2006-05-12 16:36  xavier

	* : Now gettimeofday is called if it's found by the configure
	  script. This should be backported to 2.0.x.

2006-05-11 22:28  acastro

	* : The calculation of the ELF was not working with states
	  parallellization. Also, I separated the ELF in real space
	  from the ELF in Fourier domain, which is also not working
	  (but I did not repair this one, probably the most obscure
	  object in the code).

2006-05-11 18:21  acastro

	* : The printout of the "latest cvs date" was no longer working
	  due to the cvs => svn transition. Now it prints the svn release
	  number, which univoquely determines a snapshot of the code. It
	  also prints out the last file changed (or at least one of them,
	  and the date of the change).
	  
	  [Any of the shell scripting experts could maybe take a look at
	  svn_release_nubmer.sh, since it is maybe not good. It seems to
	  be working, though].

2006-05-11 16:25  xavier

	* : * Now the first order perturbation of the ELF function can be
	  calculated
	  using finite differences with the pol mode. This allows us to
	  compare with
	  results from DFPT.
	  
	  * To avoid overwriting static and tmp/restart_gs when running in
	  pol mode, the scf_run
	  function now receives an optional argument to control if it's a
	  gs
	  calculation or not. Probably the best thing to do will be to take
	  out the
	  output part from scf and to keep the restart info in
	  tmp/restart_scf or
	  something like that.

2006-05-10 12:35  athimm

	* : First stab to a conversion of varinfo to xml format.
	  
	  The xml format will be easier to deal with in the GUI (tree
	  generation). But it may also prove valuable for other tasks
	  varinfo
	  is used.
	  
	  If the team decides to go xml as a master format, then we need to
	  
	  o settle on an xml dtd
	  o convert tools to use variables.xml instead of varinfo
	  o if no tool uses varinfo, convert the embedded varinfos directly
	  in
	  xml, so the converter is not needed anymore

2006-05-10 11:17  micael

	* : Octopus now writes some information about the curvilinear
	  coordinates parameters to the "info" file and to standart output.

2006-05-09 22:24  appel

	* : There was a closing tag missing. The variables.texi file was
	  not processed properly because of this.

2006-05-09 09:20  acastro

	* : Bug fixed.
	  
	  Added the recl parameter to the open call because the NAG
	  compiler does not accept reading too long lines. This error
	  showed up only in the oct-xyz-anim utility.

2006-05-08 23:09  athimm

	* : Fix some variable definition typos.

2006-05-08 22:51  acastro

	* : The ELF was printed always, no matter if it was
	  asked or not.

2006-05-08 17:04  appel

	* : Octopus is now communicating its current internal state
	  by creating/deleting the following files
	  
	  oct-status-running
	  oct-status-finished
	  oct-status-aborted
	  
	  In multi-dataset mode the current user-defined label is
	  prepended.
	  
	  These files will be useful for the asynchronous file
	  communication with GUI. One could also think of writing
	  a current percentage to oct-status-running, which could
	  be used for a progress bar in the GUI. However, each
	  run mode would need to take care of that separately.
	  Time propagations will be easy because the code could
	  output simply x/y (i.e. finished x out of y time steps).
	  Anything that involves convergence would require some
	  kind of extrapolation of the convergence criteria to
	  emulate a progress bar.

2006-05-07 18:53  appel

	* : Adding a routine to compute the singular value decomposition
	  of a complex nxn matrix and another one to calculate the inverse
	  of the matrix using the SVD.

2006-05-07 18:49  appel

	* : The clean-local target should actually do rm -rf /tmp/octopus.*
	  since we pass already /tmp/octopus.XXXXXX to mktemp.

2006-05-07 18:44  appel

	* : Adapting the pre-command for the total energy to the
	  new output format of static/info.

2006-05-05 13:06  athimm

	* : Check for gui subdir at configure time.

2006-05-05 13:05  athimm

	* : autoconf requires more quoting.

2006-05-05 13:03  athimm

	* : Fix warning about stealing automake's clean target:
	  
	  > testsuite/Makefile.am:46: user target `clean' defined here...
	  > automake: ... overrides Automake target `clean' defined here
	  > testsuite/Makefile.am:46: consider using clean-local instead of
	  clean

2006-05-05 13:00  athimm

	* : Regenerate autotools bits against autoconf-2.59/automake-1.9.6.

2006-05-05 12:53  athimm

	* : Allow configure to be versioned.

2006-05-04 17:18  athimm

	* : Missed that one in [2037].

2006-05-04 17:15  athimm

	* : AC_HELP_STRING is deprecated, replace with AS_HELP_STRING.

2006-05-04 17:12  athimm

	* : Fix some spelling.

